// 타워 판매 핸들러
// Payload: { towerId }
export const sellTower = (uuid, payload) => {
  const { towerId } = payload;
  const towerIndex = towers.findIndex((tower) => tower.id === towerId);

  if (towerIndex === -1) {
    return { status: 'fail', message: 'Tower not found' };
  }

  const [soldTower] = towers.splice(towerIndex, 1);
  addGold(uuid, soldTower.cost / 2); // 판매 시 원가의 절반 회수

  console.log(`Sell tower successful for UUID: ${uuid}`);
  return { status: 'success', message: 'Tower sold', goldReceived: soldTower.cost / 2 };
};

// 타워 업그레이드 핸들러
// Payload: { towerId, upgradeCost }
export const upgradeTower = (uuid, payload) => {
  const { towerId, upgradeCost } = payload;
  const tower = towers.find((tower) => tower.id === towerId);

  if (!tower) {
    return { status: 'fail', message: 'Tower not found' };
  }

  if (!hasEnoughGold(uuid, upgradeCost)) {
    return { status: 'fail', message: 'Not enough gold to upgrade' };
  }

  tower.attackPower += 20; // 업그레이드 시 공격력 증가
  tower.range += 50; // 업그레이드 시 사거리 증가
  tower.level = (tower.level || 1) + 1; // 레벨 증가
  deductGold(uuid, upgradeCost);

  console.log(`Upgrade tower successful for UUID: ${uuid}`);
  return { status: 'success', message: 'Tower upgraded', tower };
};
